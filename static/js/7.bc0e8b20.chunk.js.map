{"version":3,"sources":["components/Grid/GridContainer.js","components/Grid/GridItem.js","assets/jss/material-kit-react/views/landingPage.js","assets/jss/material-kit-react/components/parallaxStyle.js","components/Parallax/Parallax.js","../node_modules/@material-ui/core/esm/Grid/Grid.js","assets/img/silide-contact-1.jpg","features/Contact/pages/index.jsx"],"names":["useStyles","makeStyles","grid","marginRight","marginLeft","width","GridContainer","props","classes","children","className","rest","container","defaultProps","position","minHeight","paddingRight","paddingLeft","flexBasis","GridItem","item","landingPageStyle","zIndex","color","title","display","marginTop","textDecoration","subtitle","fontSize","maxWidth","margin","main","background","mainRaised","borderRadius","boxShadow","parallaxStyle","parallax","height","maxHeight","overflow","backgroundPosition","backgroundSize","padding","border","alignItems","filter","left","top","content","small","styles","Parallax","windowScrollTop","window","innerWidth","pageYOffset","React","useState","transform","setTransform","useEffect","addEventListener","resetTransform","removeEventListener","style","image","parallaxClasses","classNames","undefined","backgroundImage","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","parse","parseFloat","concat","String","replace","Grid","ref","_props$alignContent","alignContent","_props$alignItems","classNameProp","_props$component","component","Component","_props$container","_props$direction","direction","_props$item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","_objectWithoutProperties","clsx","root","_extends","StyledGrid","withStyles","theme","boxSizing","flexWrap","minWidth","flexDirection","justifyContent","breakpoint","forEach","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","size","Math","round","flexGrow","up","generateGrid","name","Contact","slider","textAlign"],"mappings":"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","file":"static/js/7.bc0e8b20.chunk.js","sourcesContent":["import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    marginRight: \"-15px\",\n    marginLeft: \"-15px\",\n    width: \"auto\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridContainer(props) {\n  const classes = useStyles();\n  const { children, className, ...rest } = props;\n  return (\n    <Grid container {...rest} className={classes.grid + \" \" + className}>\n      {children}\n    </Grid>\n  );\n}\n\nGridContainer.defaultProps = {\n  className: \"\"\n};\n\nGridContainer.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    position: \"relative\",\n    width: \"100%\",\n    minHeight: \"1px\",\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    flexBasis: \"auto\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridItem(props) {\n  const classes = useStyles();\n  const { children, className, ...rest } = props;\n  return (\n    <Grid item {...rest} className={classes.grid + \" \" + className}>\n      {children}\n    </Grid>\n  );\n}\n\nGridItem.defaultProps = {\n  className: \"\"\n};\n\nGridItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n","import { container, title } from '../../material-kit-react';\n\nconst landingPageStyle = {\n  container: {\n    zIndex: '12',\n    color: '#FFFFFF',\n    ...container,\n  },\n  title: {\n    ...title,\n    display: 'inline-block',\n    position: 'relative',\n    marginTop: '30px',\n    minHeight: '32px',\n    color: '#FFFFFF',\n    textDecoration: 'none',\n  },\n  subtitle: {\n    fontSize: '1.313rem',\n    maxWidth: '500px',\n    margin: '10px auto 0',\n  },\n  main: {\n    background: '#FFFFFF',\n    position: 'relative',\n    zIndex: '3',\n  },\n  mainRaised: {\n    margin: '0px 40px 0px',\n    borderRadius: '6px',\n    boxShadow:\n      '0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2)',\n  },\n};\n\nexport default landingPageStyle;\n","const parallaxStyle = {\n  parallax: {\n    height: '100vh',\n    maxHeight: '1000px',\n    overflow: 'hidden',\n    position: 'relative',\n    backgroundPosition: 'center center',\n    backgroundSize: 'cover',\n    margin: '0',\n    padding: '0',\n    border: '0',\n    display: 'flex',\n    alignItems: 'center',\n  },\n  filter: {\n    '&:before': {\n      background: 'rgba(0, 0, 0, 0.5)',\n    },\n    '&:after,&:before': {\n      position: 'absolute',\n      zIndex: '1',\n      width: '100%',\n      height: '100%',\n      display: 'block',\n      left: '0',\n      top: '0',\n      content: \"''\",\n    },\n  },\n  small: {\n    height: '380px',\n  },\n};\n\nexport default parallaxStyle;\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from '../../assets/jss/material-kit-react/components/parallaxStyle';\n\nconst useStyles = makeStyles(styles);\n\nexport default function Parallax(props) {\n  let windowScrollTop;\n  if (window.innerWidth >= 768) {\n    windowScrollTop = window.pageYOffset / 3;\n  } else {\n    windowScrollTop = 0;\n  }\n  const [transform, setTransform] = React.useState('translate3d(0,' + windowScrollTop + 'px,0)');\n  React.useEffect(() => {\n    if (window.innerWidth >= 768) {\n      window.addEventListener('scroll', resetTransform);\n    }\n    return function cleanup() {\n      if (window.innerWidth >= 768) {\n        window.removeEventListener('scroll', resetTransform);\n      }\n    };\n  });\n  const resetTransform = () => {\n    var windowScrollTop = window.pageYOffset / 3;\n    setTransform('translate3d(0,' + windowScrollTop + 'px,0)');\n  };\n  const { filter, className, children, style, image, small } = props;\n  const classes = useStyles();\n  const parallaxClasses = classNames({\n    [classes.parallax]: true,\n    [classes.filter]: filter,\n    [classes.small]: small,\n    [className]: className !== undefined,\n  });\n  return (\n    <div\n      className={parallaxClasses}\n      style={{\n        ...style,\n        backgroundImage: 'url(' + image + ')',\n        transform: transform,\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nParallax.propTypes = {\n  className: PropTypes.string,\n  filter: PropTypes.bool,\n  children: PropTypes.node,\n  style: PropTypes.string,\n  image: PropTypes.string,\n  small: PropTypes.bool,\n};\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","export default __webpack_public_path__ + \"static/media/silide-contact-1.a11c0729.jpg\";","import React from 'react';\r\nimport GridContainer from '../../../components/Grid/GridContainer';\r\nimport GridItem from '../../../components/Grid/GridItem';\r\nimport Parallax from '../../../components/Parallax/Parallax';\r\nimport slider from '../../../assets/img/silide-contact-1.jpg';\r\nimport classNames from 'classnames';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport styles from '../../../assets/jss/material-kit-react/views/landingPage';\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nfunction Contact(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Parallax image={slider}>\r\n        <div className={classes.container} style={{ textAlign: 'center' }}>\r\n          <GridContainer>\r\n            <GridItem></GridItem>\r\n          </GridContainer>\r\n        </div>\r\n      </Parallax>\r\n      <div className={classNames(classes.main, classes.mainRaised)}>\r\n        <div className={classes.container}>\r\n          <h1>Contact Page</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n"],"sourceRoot":""}